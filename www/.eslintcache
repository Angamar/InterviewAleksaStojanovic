[{"D:\\Projekti\\Todo-list\\www\\src\\index.js":"1","D:\\Projekti\\Todo-list\\www\\src\\App.js":"2","D:\\Projekti\\Todo-list\\www\\src\\reportWebVitals.js":"3","D:\\Projekti\\Todo-list\\www\\src\\components\\List.js":"4","D:\\Projekti\\Todo-list\\www\\src\\components\\NewTaskForm.js":"5","D:\\Projekti\\Todo-list\\www\\src\\components\\header.js":"6","D:\\Projekti\\Todo-list\\www\\src\\components\\footer.js":"7","D:\\Projekti\\Todo-list\\www\\src\\components\\TaskLI.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":3558,"mtime":1610234604766,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1103,"mtime":1610066692279,"results":"13","hashOfConfig":"10"},{"size":1679,"mtime":1610242074539,"results":"14","hashOfConfig":"10"},{"size":241,"mtime":1609975543122,"results":"15","hashOfConfig":"10"},{"size":496,"mtime":1609994077519,"results":"16","hashOfConfig":"10"},{"size":4197,"mtime":1610225740230,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"usl1md",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"D:\\Projekti\\Todo-list\\www\\src\\index.js",[],["36","37"],"D:\\Projekti\\Todo-list\\www\\src\\App.js",[],"D:\\Projekti\\Todo-list\\www\\src\\reportWebVitals.js",[],"D:\\Projekti\\Todo-list\\www\\src\\components\\List.js",[],"D:\\Projekti\\Todo-list\\www\\src\\components\\NewTaskForm.js",[],"D:\\Projekti\\Todo-list\\www\\src\\components\\header.js",[],"D:\\Projekti\\Todo-list\\www\\src\\components\\footer.js",[],"D:\\Projekti\\Todo-list\\www\\src\\components\\TaskLI.js",["38"],"import { useEffect, useState } from \"react\";\r\nimport M from \"materialize-css\";\r\n\r\nconst TaskLI = ({ thisTask, onTaskDelete, onTaskCheck, onTaskUpdate }) => {\r\n    const [editting, setEditting] = useState(false);\r\n    const [updateInput, setUpdateInput] = useState(thisTask.taskName);\r\n    M.AutoInit();\r\n\r\n    const handleEditButtonClick = () => {\r\n        setEditting(!editting);\r\n        setUpdateInput(thisTask.taskName);\r\n    };\r\n\r\n    const handleUpdateButtonClick = (e) => {\r\n        e.preventDefault();\r\n        onTaskUpdate(thisTask, updateInput);\r\n        setEditting(!editting);\r\n    };\r\n\r\n    const handleUpdateInput = (e) => {\r\n        setUpdateInput(e.target.value);\r\n    };\r\n\r\n    const handleDeleteButtonClick = () => {\r\n        onTaskDelete(thisTask);\r\n    };\r\n\r\n    const handleCheckboxClick = () => {\r\n        onTaskCheck(thisTask);\r\n    };\r\n\r\n    //<div onClick={handleCheckButtonClick}className={`secondary-content  left`}></div>\r\n\r\n    if (!editting)\r\n        return (\r\n            <li\r\n                className={`collection-item ${\r\n                    thisTask.done ? \" green lighten-4 \" : \"\"\r\n                }`}\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                defaultChecked={thisTask.done ? \"checked\" : \"\"}\r\n                                checked={thisTask.done ? \"checked\" : \"\"}\r\n                                onClick={handleCheckboxClick}\r\n                                className={`secondary-content  `}\r\n                            />\r\n                            <span\r\n                                className={\r\n                                    thisTask.done\r\n                                        ? \"checkbox-item-unchecked\"\r\n                                        : \"checkbox-item-checked\"\r\n                                }\r\n                            >\r\n                                {thisTask.taskName}\r\n                            </span>\r\n                        </label>\r\n\r\n                        <div\r\n                            onClick={handleEditButtonClick}\r\n                            className={`secondary-content`}\r\n                        >\r\n                            <i className=\"material-icons editButton\">edit</i>\r\n                        </div>\r\n                        <div\r\n                            onClick={handleDeleteButtonClick}\r\n                            className={`secondary-content`}\r\n                        >\r\n                            <i className=\"material-icons trashButton\">delete</i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    else\r\n        return (\r\n            <li\r\n                className={`collection-item ${\r\n                    thisTask.done ? \"done green lighten-4 \" : \"\"\r\n                }`}\r\n            >\r\n                <div className=\"input-field edit-field\">\r\n                    <input\r\n                        value={updateInput}\r\n                        onChange={handleUpdateInput}\r\n                        onSubmit={handleUpdateButtonClick}\r\n                        type=\"text\"\r\n                        className=\"active  update-input\"\r\n                    />\r\n                    <div className=\"valign-wrapper right\">\r\n                        <div\r\n                            onClick={handleUpdateButtonClick}\r\n                            className=\"secondary-content \"\r\n                            type=\"submit\"\r\n                        >\r\n                            <i className=\"material-icons updateButton\">check</i>\r\n                        </div>\r\n                        <div\r\n                            onClick={handleEditButtonClick}\r\n                            className=\"secondary-content \"\r\n                        >\r\n                            <i className=\"material-icons cancelUpdateButton\">\r\n                                close\r\n                            </i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n};\r\n\r\nexport default TaskLI;\r\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":10,"nodeType":"45","messageId":"46","endLine":1,"endColumn":19},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]